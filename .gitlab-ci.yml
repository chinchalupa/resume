image: node:latest

before_script:
  # Setup npm path for resume-cli npm package
  - export PATH=$(npm bin):$PATH

cache:
  paths:
    - node_modules/

stages:
  - setup
  - test
  - build:resume
  - build:image
  - publish

setup:resume:
  stage: setup
  script:
    - npm install
    - npm install resume-cli
    - npm install jsonresume-theme-${RESUME_THEME}

test:resume:
  stage: test
  script:
    - resume test

build:resume:
  stage: build:resume
  script:
    - resume export resume.html --theme $RESUME_THEME --format html
  artifacts:
    paths:
      - ./resume.html

build:image:
  stage: build:image
  image: docker:git
  services:
    - docker:dind
  before_script:
    - echo $CI_BUILD_TOKEN | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
  script:
    - docker pull $GITLAB_IMAGE || true
    - docker build --cache-from $GITLAB_IMAGE -t $GITLAB_IMAGE:$CI_COMMIT_SHA .
    - docker push $GITLAB_IMAGE

publish:image:
  stage: publish
  image: docker:git
  services:
    - docker:dind
  before_script:
    - echo $CI_BUILD_TOKEN | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
    - echo $GCLOUD_SERVICE_KEY > /tmp/$CI_PIPELINE_ID.json
    - cat /tmp/$CI_PIPELINE_ID.json | docker login -u _json_key --password-stdin https://us.gcr.io
  script:
    - docker pull $GITLAB_IMAGE:$CI_COMMIT_SHA
    - docker tag $GITLAB_IMAGE:$CI_COMMIT_SHA $GCR_IMAGE:latest
    - docker push $GCR_IMAGE
  after_script:
    - rm /tmp/$CI_PIPELINE_ID.json
  

